// <auto-generated />
using System;
using HealthCheck.Auth.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HealthCheck.Auth.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240717214731_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HealthCheck.Auth.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Crm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("edd023dd-90b3-4637-95fe-581d855aeef9"),
                            CreatedAt = new DateTime(2024, 7, 17, 21, 47, 31, 41, DateTimeKind.Utc).AddTicks(5832),
                            Crm = "000000",
                            Email = "doctor1@healthcheck.com",
                            Name = "Doctor One",
                            PasswordHash = "",
                            UserRole = 0
                        },
                        new
                        {
                            Id = new Guid("ffa0a2f0-db68-4fd7-8a39-92b40002fc34"),
                            CreatedAt = new DateTime(2024, 7, 17, 21, 47, 31, 41, DateTimeKind.Utc).AddTicks(6749),
                            Crm = "111111",
                            Email = "doctor2@healthcheck.com",
                            Name = "Doctor Two",
                            PasswordHash = "",
                            UserRole = 0
                        },
                        new
                        {
                            Id = new Guid("bf488734-a3f6-48fd-9a44-f493ee2ea028"),
                            Cpf = "22222222222",
                            CreatedAt = new DateTime(2024, 7, 17, 21, 47, 31, 41, DateTimeKind.Utc).AddTicks(7115),
                            Email = "patient1@healthcheck.com",
                            Name = "Patient One",
                            PasswordHash = "",
                            UserRole = 1
                        },
                        new
                        {
                            Id = new Guid("8d2f05bb-f651-4b26-855f-fcc445746d52"),
                            Cpf = "33333333333",
                            CreatedAt = new DateTime(2024, 7, 17, 21, 47, 31, 41, DateTimeKind.Utc).AddTicks(7504),
                            Email = "patient2@healthcheck.com",
                            Name = "Patient Two",
                            PasswordHash = "",
                            UserRole = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
